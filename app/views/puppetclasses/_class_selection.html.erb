  <% if obj.errors[:puppetclasses].any? %>
    <%= alert :class => "alert-block alert-danger base in fade",
              :text => obj.errors[:puppetclasses].map { |e| "<li>#{e}</li>" }.to_s.html_safe %>
  <% end %>

  <%= render("config_groups/config_groups_selection", :obj => obj, :type => type) unless controller_name == 'config_groups' %>

<div class="row">
  <div class="col-md-4 classes">
    <h3><%= _('Included Classes') %></h3>
    <%# hidden field to ensure that classes gets removed if none are defined %>
    <%= hidden_field_tag "#{type}[puppetclass_ids][]" %>
    <ul id="selected_classes">
      <% if authorized_for(:controller => :host_editing, :action => :edit_classes) %>
        <%= render :partial => "puppetclasses/selectedClasses",
          :collection => obj.individual_puppetclasses ,:as => :klass, :locals => { :type => type, :host => obj } %>
        <% unless controller_name == 'config_groups' %>
            <%= render :partial => "puppetclasses/classes_in_groups",
          :collection => obj.classes_in_groups ,:as => :klass, :locals => { :type => type, :obj => obj } %>
        <% end %>
      <% else %>
        <% obj.puppetclasses.each do |klass| %>
          <li data-original-title="<%= _('Not authorized to edit classes') %>" rel="twipsy" ><%= h klass.name %></li>
        <% end %>
      <% end %>
    </ul>
    <%# inherited classes %>
    <%= content_tag(:ul, :id => 'inherited_ids', :'data-inherited-puppetclass-ids' => obj.parent_class_ids.to_json) do %>
      <% obj.parent_classes.each do |klass| %>
        <li data-original-title="<%= _('included already from parent') %>" rel="twipsy" style='color:black;'><%= h klass.name %></li>
      <% end %>
    <% end %>
  </div>

  <div class="col-md-8">
    <h3><%= _('Available Classes') %></h3>
    <div class='clearfix'>
      <div class='form-group col-md-6'>
        <input placeholder="<%= _('Filter classes') %>" class="form-control" onkeyup="filter_puppet_classes(this);" type='text'>
      </div>
    </div>
    <div class="row">
      <%= render "puppetclasses/classes",
        :puppetclasses => obj.available_puppetclasses,
        :selected_puppet_classes => obj.all_puppetclasses,
        :obj => obj,
        :type => obj.class.model_name.tableize.singularize
      %>
    </div>
  </div>
</div>
